name: Build and Publish

on:
  push:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set Git user info
      run: |
        git config --global user.name "${{ secrets.GIT_USER_NAME }}"
        git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
        echo "GIT_USER_NAME=${{ secrets.GIT_USER_NAME }}" >> $GITHUB_ENV
        echo "GIT_USER_EMAIL=${{ secrets.GIT_USER_EMAIL }}" >> $GITHUB_ENV  
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Install build package
      run: pip install build
        
    - name: Extract previous version number
      id: extract_version
      run: |
        prev_whl=$(ls dist/*.whl)
        version=$(basename "$prev_whl" | cut -d'-' -f2)
        IFS='.' read -r -a version_parts <<< "$version"
        major="${version_parts[0]}"
        minor="${version_parts[1]}"
        patch="${version_parts[2]}"
        patch=$((patch + 1))
        new_version="$major.$minor.$patch"
        echo "::set-output name=new_version::$new_version"


    - name: Set Berlin time without spaces
      id: berlin_time
      run: echo "BERLIN_TIME=$(TZ='Europe/Berlin' date +'%Y.%m.%d %H:%M:%S')" >> $GITHUB_ENV

    - name: Delete old WHL files
      run: |
        rm -f dist/*.whl
        git rm -r dist/*.whl
        git commit -m "Delete old WHL files - ${{ env.BERLIN_TIME }}"
        git push

    - name: Build wheel file
      run: python -m build

    - name: Rename wheel file with incremented version
      run: |
        new_version="${{ steps.extract_version.outputs.new_version }}"
        mv dist/*.whl "dist/mcfly-$new_version-py3-none-any.whl"

    - name: Push wheel file to repository
      run: |
        git config user.name "${{ env.GIT_USER_NAME }}"
        git config user.email "${{ env.GIT_USER_EMAIL }}"
        git add dist/*.whl
        git commit -m "Add new wheel file - ${{ env.BERLIN_TIME }}"
        git push

  update_toml:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code from the other repository
      uses: actions/checkout@v3
      with:
        repository: edblu1/dcaiti_2024
        ref: walking-standing-mcfly # or specify a specific branch if needed
      
    - name: Set Git user info for the other repository
      run: |
        git config user.name "${{ secrets.GIT_USER_NAME }}"
        git config user.email "${{ secrets.GIT_USER_EMAIL }}"
    
    - name: Read previous version number
      id: extract_version
      run: |
        prev_whl=$(ls dist/*.whl)
        version=$(basename "$prev_whl" | cut -d'-' -f2)
        echo "::set-output name=version::$version"
      
    - name: Update pyproject.toml
      run: |
        new_version="${{ steps.extract_version.outputs.version }}"
        sed -i "s/version = \"[0-9]\+\.[0-9]\+\.[0-9]\+\"/version = \"$new_version\"/g" path/to/your/pyproject.toml

    - name: Commit and push changes to the other repository
      run: |
        git add path/to/your/pyproject.toml
        git commit -m "Update pyproject.toml to version ${{ steps.extract_version.outputs.version }}"
        git push
